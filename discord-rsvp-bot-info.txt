DISCORD RSVP BOT - COMPLETE USER GUIDE
====================================

OVERVIEW
--------
The Discord RSVP Bot is a comprehensive event management system designed for Discord communities that organize regular weekly activities. Whether you're running gaming raids, training sessions, or community meetups, this bot automates the entire process of event scheduling, RSVP tracking, and member notifications.

KEY FEATURES
------------
‚úÖ Weekly Event Planning - Set up recurring events for each day of the week
‚úÖ Automatic Daily Posts - Bot posts event announcements at your configured time
‚úÖ Smart RSVP System - Members respond with Yes/No/Maybe/Mobile buttons
‚úÖ Intelligent Reminders - Multiple reminder types (4PM, 1-hour, 15-minute before events)
‚úÖ Mobile User Support - Special RSVP option for members joining via mobile
‚úÖ Comprehensive Attendance Tracking - See who's coming to each event
‚úÖ Admin Management Tools - Full control over schedules and settings
‚úÖ Automatic Cleanup - Removes old event posts to keep channels tidy
‚úÖ Advanced Monitoring - Bot health checks and performance metrics
‚úÖ Database Integration - Persistent data storage via Supabase

TECHNICAL REQUIREMENTS
---------------------
‚Ä¢ Discord Server (with admin permissions)
‚Ä¢ Free Supabase Account (for data storage)
‚Ä¢ Python 3.8+ (if self-hosting)
‚Ä¢ Basic command line knowledge (for setup)

BOT INVITATION LINK
------------------
https://discord.com/oauth2/authorize?client_id=1388283299562262559&permissions=1144344644123728&integration_type=0&scope=bot

REQUIRED PERMISSIONS
-------------------
The bot needs these Discord permissions to function properly:
‚Ä¢ Send Messages - Post event announcements
‚Ä¢ Use Slash Commands - Enable command functionality  
‚Ä¢ Manage Messages - Delete old posts during cleanup
‚Ä¢ View Members - Check server membership for RSVP tracking
‚Ä¢ Embed Links - Create rich event displays

QUICK START GUIDE
-----------------
1. Invite the bot to your Discord server
2. Set up a Supabase database (free at supabase.com)
3. Configure your weekly schedule: /setup_weekly_schedule
4. Set your event channel: /set_event_channel #your-channel
5. Set event times: /set_event_time hour:20 minute:0
6. Configure reminders: /configure_reminders
7. Watch the magic happen automatically!

CORE COMMANDS - GETTING STARTED
-------------------------------

Commands in this section are available through `/list_commands` for everyday bot usage.

/setup_weekly_schedule
‚Ä¢ Interactive setup for your weekly events
‚Ä¢ Configure each day with event name, outfit/gear, and vehicle
‚Ä¢ Example: Monday = "Raid Night" | Combat Gear | Tank

/set_event_channel <channel>
‚Ä¢ Choose where daily event posts appear
‚Ä¢ This channel will show RSVP buttons and member responses
‚Ä¢ Example: /set_event_channel #events

/set_event_time <hour> <minute>
‚Ä¢ Set when your events start (Eastern Time)
‚Ä¢ Used for reminder calculations
‚Ä¢ Example: /set_event_time 20 0 (8:00 PM Eastern)

/set_posting_time <hour> <minute>  
‚Ä¢ When daily RSVP posts are created (default: 9:00 AM Eastern)
‚Ä¢ Example: /set_posting_time 9 0

/configure_reminders
‚Ä¢ Control when reminder notifications are sent
‚Ä¢ Options: 4:00 PM daily, 1 hour before, 15 minutes before
‚Ä¢ All can be enabled/disabled independently

SCHEDULE MANAGEMENT COMMANDS
----------------------------

/view_schedule
‚Ä¢ Display your complete weekly event schedule
‚Ä¢ Shows all 7 days with event details

/edit_event <day>
‚Ä¢ Modify or add events for specific days
‚Ä¢ Interactive modal for easy editing
‚Ä¢ Example: /edit_event monday

MEMBER INTERACTION COMMANDS
---------------------------

/view_rsvps
‚Ä¢ See who's attending today's event
‚Ä¢ Shows Yes/No/Maybe/Mobile responses with member names
‚Ä¢ Displays non-responders with member names

/view_yesterday_rsvps
‚Ä¢ Review attendance from previous day
‚Ä¢ Shows member names for all response types
‚Ä¢ Great for tracking participation trends

ADVANCED REPORTING COMMANDS (ADMIN ONLY)
----------------------------------------

/midweek_rsvp_report
‚Ä¢ Comprehensive Monday-Wednesday RSVP analysis
‚Ä¢ Shows actual member names for each response type
‚Ä¢ Day-by-day breakdown with participation rates
‚Ä¢ Identifies consistent attendees across 3 days
‚Ä¢ Smart name display (up to 10 names per category)
‚Ä¢ Visual separation between days for easy reading

/weekly_rsvp_report  
‚Ä¢ Complete weekly RSVP analysis (Monday-Sunday)
‚Ä¢ Compact daily summaries with participation rates
‚Ä¢ Most active attendees list (all unique "Yes" responders)
‚Ä¢ Members who never responded (if >5 people)
‚Ä¢ Perfect attendance tracking
‚Ä¢ Good attendance analysis (70%+ participation)
‚Ä¢ Week totals and comprehensive statistics
‚Ä¢ Deduplicated member lists across multiple days

COMMAND NAVIGATION
------------------

/list_commands
‚Ä¢ Display main bot commands for everyday use
‚Ä¢ Includes setup, management, and RSVP viewing commands
‚Ä¢ Focuses on regular workflow and operations

/list_help
‚Ä¢ Show troubleshooting, maintenance, and diagnostic commands
‚Ä¢ Advanced commands for fixing issues and debugging the bot
‚Ä¢ Organized by function: troubleshooting, maintenance, diagnostics, system info

ADVANCED COMMANDS (Available via /list_help)
--------------------------------------------

The following commands are accessed through `/list_help` and are organized into categories:

TROUBLESHOOTING & FIXES:
‚Ä¢ /force_post_rsvp - Manually post today's RSVP if automatic posting fails (shows progress updates)
‚Ä¢ /reset_setup - Clear stuck weekly schedule setup process (use if setup gets interrupted)
‚Ä¢ /force_sync - Refresh bot commands if they're not appearing (forces re-registration with Discord)

MAINTENANCE & CLEANUP:
‚Ä¢ /delete_message <message_id> - Remove specific messages by ID (useful for cleaning up mistakes)
‚Ä¢ /cleanup_old_posts - Manually remove old event posts (preserves RSVP data while cleaning Discord messages)
‚Ä¢ /set_admin_channel <channel> - Choose where admin notifications are sent (includes alerts about missing weekly schedules)

ADVANCED DIAGNOSTICS:
‚Ä¢ /debug_auto_posting - Diagnose automatic posting problems (shows timing, settings, and schedule status)
‚Ä¢ /test_auto_posting - Manually trigger posting checks with debug logs
‚Ä¢ /restart_daily_task - Restart automatic posting system (use if daily posts stop working)  
‚Ä¢ /rate_limit_status - Check Discord rate limiting status (recommendations for large servers)
‚Ä¢ /debug_view_rsvps - Debug RSVP viewing issues with database query details
‚Ä¢ /debug_reminders - Comprehensive reminder system diagnosis
‚Ä¢ /test_reminder - Manually trigger reminder checks for testing
‚Ä¢ /reset_reminder_tracking - Reset reminder tracking for testing (debugging only)

SYSTEM INFORMATION:
‚Ä¢ /bot_status - Check bot uptime and basic health metrics (connection status and guild count)
‚Ä¢ /monitor_status - Detailed performance information (memory usage, CPU stats, latency data)
‚Ä¢ /test_connection - Verify Discord and database connectivity (troubleshoot connection issues)
‚Ä¢ /test_database - Test database connection and show configuration details
‚Ä¢ /server_settings - Display all bot configuration for your server (complete settings overview)

PERFORMANCE MONITORING (Admin Only):
‚Ä¢ /system_health - Comprehensive system health and performance metrics dashboard
‚Ä¢ /performance_metrics - Detailed performance analysis with optimization insights
‚Ä¢ /security_status - Security monitoring and threat detection status

HOW THE RSVP SYSTEM WORKS
-------------------------

DAILY WORKFLOW:
1. Bot automatically posts daily events at your configured time
2. Members click buttons to RSVP: ‚úÖ Yes | ‚ùå No | ‚ùì Maybe | üì± Mobile
3. Bot sends reminders based on your settings
4. Admins can view attendance with /view_rsvps (shows member names)
5. Admins can generate detailed reports with /midweek_rsvp_report and /weekly_rsvp_report

RSVP OPTIONS:
‚Ä¢ YES - "I'm attending the event"
‚Ä¢ NO - "I can't make it today"  
‚Ä¢ MAYBE - "I might attend, not certain"
‚Ä¢ MOBILE - "I'm attending but on mobile device"

AUTOMATIC FEATURES:
‚Ä¢ Daily event posts at your configured time
‚Ä¢ Smart reminders (4PM, 1-hour before, 15-min before)
‚Ä¢ Automatic cleanup of old posts
‚Ä¢ Weekly schedule validation
‚Ä¢ Admin notifications for missing schedules

EXAMPLE WEEKLY SCHEDULE
-----------------------
Monday: "Raid Night" | Combat Gear | Main Battle Tank
Tuesday: "PvP Tournament" | Light Armor | Fast Attack Vehicle  
Wednesday: "Training Session" | Practice Gear | Transport Helicopter
Thursday: "Casual Night" | Comfortable Attire | Any Vehicle
Friday: "Weekend Prep" | Mission Gear | Heavy Transport
Saturday: "Open Play" | Casual Gear | Personal Choice
Sunday: "Planning Meeting" | Formal Attire | Command Vehicle

REMINDER SYSTEM
---------------
The bot can send up to 3 types of reminders:

4:00 PM EASTERN REMINDER:
‚Ä¢ Daily notification about tonight's event
‚Ä¢ Sent regardless of event time
‚Ä¢ Good for early awareness

1-HOUR BEFORE REMINDER:
‚Ä¢ Sent exactly 1 hour before event start time
‚Ä¢ Final preparation notice
‚Ä¢ Based on your configured event time

15-MINUTE REMINDER:
‚Ä¢ Last-chance notification
‚Ä¢ Sent 15 minutes before event starts
‚Ä¢ "Get ready now" alert

ADMIN FEATURES
--------------
‚Ä¢ Special user access (specific user IDs have full admin rights)
‚Ä¢ Server admin permissions automatically grant access
‚Ä¢ Admin notifications when schedules aren't set up
‚Ä¢ Force posting capabilities for troubleshooting
‚Ä¢ Complete configuration control

TROUBLESHOOTING GUIDE
--------------------

COMMANDS NOT SHOWING:
1. Use /list_help then /force_sync to refresh commands
2. Check bot permissions in server settings
3. Wait up to 1 hour for Discord to update
4. Restart bot if self-hosting

AUTOMATIC POSTING NOT WORKING:
1. Use /list_help then /debug_auto_posting to diagnose
2. Verify weekly schedule is configured
3. Check event channel permissions
4. Confirm posting time settings
5. Try /list_help then /restart_daily_task

RSVP POSTS NOT APPEARING:
1. Use /list_help then /force_post_rsvp to post manually  
2. Check bot permissions in event channel
3. Verify current week's schedule is set up
4. Ensure event channel is configured

REMINDERS NOT SENDING:
1. Check reminder settings with /configure_reminders
2. Verify event time is configured
3. Confirm reminders are enabled
4. Check bot permissions in event channel
5. Use /list_help then /debug_reminders for diagnosis

DATABASE ERRORS:
1. Verify Supabase project is active
2. Check SUPABASE_URL and SUPABASE_KEY
3. Confirm database tables are created
4. Use /list_help then /test_connection to verify connectivity

RATE LIMITING ISSUES:
1. Use /list_help then /rate_limit_status to check server risk
2. Avoid frequent /view_rsvps in large servers (500+ members)
3. Bot includes automatic rate limiting protection
4. Space out admin commands during peak times

PERMISSION ERRORS:
‚Ä¢ Ensure bot has required permissions in event channels
‚Ä¢ Check "Manage Messages" permission for cleanup features
‚Ä¢ Verify "Send Messages" and "Embed Links" permissions
‚Ä¢ Admin users need "Manage Guild" permission or be on approved list

ADVANCED FEATURES
-----------------

COMPREHENSIVE REPORTING SYSTEM:
‚Ä¢ Daily attendance with member names (/view_rsvps)
‚Ä¢ Historical tracking (/view_yesterday_rsvps)  
‚Ä¢ Mid-week analysis with detailed member breakdowns (/midweek_rsvp_report)
‚Ä¢ Full weekly reports with attendance patterns (/weekly_rsvp_report)
‚Ä¢ Smart name truncation to handle large servers
‚Ä¢ Participation rate calculations and trend analysis
‚Ä¢ Consistent attendee identification
‚Ä¢ Non-responder tracking for follow-up

MULTIPLE POSTS PER DAY:
‚Ä¢ Bot handles multiple manual posts for same event
‚Ä¢ Aggregates RSVP responses across all posts
‚Ä¢ Useful for re-posting if original is deleted

MOBILE USER SUPPORT:
‚Ä¢ Special RSVP category for mobile players
‚Ä¢ Helps organizers plan for different participation types
‚Ä¢ Tracked separately in attendance reports

AUTOMATIC CLEANUP:
‚Ä¢ Removes Discord messages older than yesterday
‚Ä¢ Preserves all RSVP data in database
‚Ä¢ Keeps channels clean without losing attendance history

TIMEZONE HANDLING:
‚Ä¢ All times use Eastern Time Zone
‚Ä¢ Automatic daylight saving time adjustment
‚Ä¢ Clear time displays show both Eastern and UTC

PERFORMANCE MONITORING:
‚Ä¢ Real-time bot health metrics
‚Ä¢ Memory and CPU usage tracking
‚Ä¢ Connection quality monitoring
‚Ä¢ Automatic error recovery

DATA PERSISTENCE:
‚Ä¢ All schedules stored in Supabase database
‚Ä¢ RSVP responses preserved permanently
‚Ä¢ Admin settings maintained across restarts
‚Ä¢ Historical attendance data available

SECURITY FEATURES
-----------------
‚Ä¢ Admin command restrictions
‚Ä¢ User ID verification system
‚Ä¢ Database connection encryption
‚Ä¢ Environment variable protection
‚Ä¢ Permission-based access control

BEST PRACTICES
--------------
1. Set up weekly schedules at start of each week
2. Monitor bot status regularly with /list_help diagnostic commands
3. Use /list_help cleanup commands to maintain channel organization
4. Test changes with /list_help debug commands before events
5. Keep Supabase project active and updated
6. Review attendance trends with /view_yesterday_rsvps and weekly reports
7. Use /midweek_rsvp_report on Wednesdays to check early-week engagement
8. Generate /weekly_rsvp_report on Sundays to analyze full-week participation
9. Follow up with members who consistently appear in "No Response" lists
10. Configure appropriate reminder timing for your community
11. Use the detailed member name reports to identify engagement patterns
12. Access troubleshooting commands through /list_help for organized problem-solving

SUPPORT & MAINTENANCE
--------------------
‚Ä¢ Bot includes comprehensive error handling
‚Ä¢ Automatic recovery from connection issues
‚Ä¢ Real-time diagnostic commands available via /list_help
‚Ä¢ Database backups handled by Supabase
‚Ä¢ Performance monitoring and alerting built-in
‚Ä¢ Organized command structure: main commands via /list_commands, advanced via /list_help

For technical support, use /list_help to access the bot's built-in diagnostic commands or check the console logs if self-hosting. The bot provides detailed error messages and troubleshooting guidance for common issues.

CONCLUSION
----------
The Discord RSVP Bot transforms event management from a manual chore into an automated system that enhances community engagement. With its comprehensive feature set, intelligent automation, and robust monitoring capabilities, it's the perfect solution for any Discord community that values organized, well-attended events.

Ready to revolutionize your community events? Invite the bot today and experience the difference automated event management can make! 